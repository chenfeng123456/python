#Unique Paths
##Description:
```
A robot is located at the top-left corner of a m x n grid (marked 'Start' in the diagram below).

The robot can only move either down or right at any point in time. The robot is trying to reach the bottom-right corner of the grid (marked 'Finish' in the diagram below).

How many possible unique paths are there?


Above is a 3 x 7 grid. How many possible unique paths are there?
```
###Note: 
m and n will be at most 100.

```cpp
class Solution {
public:
    int uniquePaths(int m, int n) {
        vector<vector<int>> dp(m,vector<int>(n,0));
        for(int i=0;i<m;i++)
            dp[i][0]=1;
        for(int i=0;i<n;i++)
            dp[0][i]=1;
        for(int i=1;i<m;i++)
            for(int j=0;j<n;j++)
                dp[i][j]=dp[i-1][j]+dp[i][j-1];
        return dp[m-1][n-1];
    }
};
```
***************************************
这道题跟Minimum Path Sum的做法差不多，只需定义一个m行n列的二维数组dp。由于只能向下或向右移动，所以除第一行和第一列都为1以外，其余每个元素的值都等于它上面和左面的值相加。最后再返回最后一个元素即可。