# Ones and Zeroes
## Description:
```
In the computer world, use restricted resource you have to generate maximum benefit is what we always want to pursue.

For now, suppose you are a dominator of m 0s and n 1s respectively. On the other hand, there is an array with strings consisting of only 0s and 1s.

Now your task is to find the maximum number of strings that you can form with given m 0s and n 1s. Each 0 and 1 can be used at most once.
```
Note:

    1. The given numbers of 0s and 1s will both not exceed 100
    2. The size of given string array won't exceed 600.

### Example 1:
```
Input: Array = {"10", "0001", "111001", "1", "0"}, m = 5, n = 3
Output: 4

Explanation: This are totally 4 strings can be formed by the using of 5 0s and 3 1s, which are “10,”0001”,”1”,”0”
```
### Example 2:
```
Input: Array = {"10", "0", "1"}, m = 1, n = 1
Output: 2

Explanation: You could form "10", but then you'd have nothing left. Better form "0" and "1".
```
```cpp
class Solution {
public:
    int findMaxForm(vector<string>& strs, int m, int n) {
        vector<vector<int>> dp(m+1,vector<int>(n+1,0));
        for(int i=0;i<strs.size();i++)
        {
            int ones=0,zeros=0;
            for(int j=0;j<strs[i].length();j++)
            {
                if(strs[i][j]=='0') zeros++;
                else ones++;
            }
            for(int j=m;j>=zeros;j--)
            {
                for(int k=n;k>=ones;k--)
                    dp[j][k]=max(dp[j][k],dp[j-zeros][k-ones]+1);
            }
        }
        return dp[m][n];
    }
};
```
***************************************
- [思路来源](https://www.cnblogs.com/grandyang/p/6188893.html)

到目前为止我对动态规划的感受就是对与dp下标意义的选取很关键，它直接影响到我们的解题思路。

本题中我们让dp[i][j]表示当m=i，n=j时所能得到的最大个数。每个dp[i][j]都可以表示成dp[i-zeros][j-ones]+1和自己中较大者。

我们可以这样理解，dp中每一个元素都代表了一种m为i，n为j时的一种选择方案。而对应每一种m=i，n=j我们还有一种选择方案那就是在方案dp[i-zeros][j-ones]的基础上再多加一个当前字符串。两个方案中较大者即为最佳方案。